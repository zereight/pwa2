{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\n//nextjs에는 app component랑 document component가 있다.\n//파일이름이 _app인 이유는 app.js라는 파일이 어딘가 내장되어 있을 수 있기 때문이다.\nimport App, { Container } from \"next/app\";\nimport Header from \"../components/Header\";\nimport React from \"react\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return (//여기서 메세지를 입력하면 모든 페이지의 맨 위에서 요소가 나타난다.\n        React.createElement(Container, null, React.createElement(Header, null), React.createElement(Component, pageProps))\n      );\n    }\n  }], [{\n    key: \"getInitialProps\",\n    //App은 nextjs의 가장 기본이 되는 메인 페이지이다. withLayout같은거 필요없었다.\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, context, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, context = _ref.context;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(context);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/home/user21511816/바탕화면/code/pwa/pages/_app.js"],"names":["App","Container","Header","React","MyApp","props","Component","pageProps","router","context","getInitialProps"],"mappings":";;;;;;;AAAA;AACA;AAEA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGqBC,K;;;;;;;;;;;;;6BAaT;AAAA,wBAE2B,KAAKC,KAFhC;AAAA,UAEGC,SAFH,eAEGA,SAFH;AAAA,UAEcC,SAFd,eAEcA,SAFd;AAGJ,aACI;AACA,4BAAC,SAAD,QACI,oBAAC,MAAD,OADJ,EAEI,oBAAC,SAAD,EAAeA,SAAf,CAFJ;AAFJ;AAQH;;;AAxBoC;;;;;;;;;;AAEND,gBAAAA,S,QAAAA,S,EAAWE,M,QAAAA,M,EAAQC,O,QAAAA,O;AAE1CF,gBAAAA,S,GAAY,E;;qBACZD,SAAS,CAACI,e;;;;;;uBACQJ,SAAS,CAACI,eAAV,CAA2BD,OAA3B,C;;;AAAlBF,gBAAAA,S;;;iDAGG;AAACA,kBAAAA,SAAS,EAATA;AAAD,iB;;;;;;;;;;;;;;;;;;;EAToBP,G;;SAAdI,K","sourcesContent":["//nextjs에는 app component랑 document component가 있다.\n//파일이름이 _app인 이유는 app.js라는 파일이 어딘가 내장되어 있을 수 있기 때문이다.\n\nimport App, {Container} from \"next/app\";\nimport Header from \"../components/Header\";\nimport React from \"react\";\n\n\nexport default class MyApp extends App { //App은 nextjs의 가장 기본이 되는 메인 페이지이다. withLayout같은거 필요없었다.\n\n    static async getInitialProps( {Component, router, context } ){\n\n        let pageProps = {};\n        if( Component.getInitialProps ){\n            pageProps = await Component.getInitialProps( context );\n        }\n\n        return {pageProps};\n1\n    }\n\n    render(){\n\n        const {Component, pageProps} = this.props;\n        return (\n            //여기서 메세지를 입력하면 모든 페이지의 맨 위에서 요소가 나타난다.\n            <Container>\n                <Header/>\n                <Component {...pageProps} />\n            </Container>\n        );\n\n    }\n}"]},"metadata":{},"sourceType":"module"}